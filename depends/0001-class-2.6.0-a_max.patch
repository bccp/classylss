From 721d3966be76562bfefffbf1845adade53550ac9 Mon Sep 17 00:00:00 2001
From: Yu Feng <rainwoodman@gmail.com>
Date: Sun, 23 Feb 2020 19:00:26 -0800
Subject: [PATCH 1/3] class-2.6.0-a_max

---
 include/background.h    |  4 +++-
 source/background.c     | 37 +++++++++++++++++++++++++++++--------
 source/input.c          | 11 +++++++++++
 source/perturbations.c  |  9 +++++----
 source/thermodynamics.c | 26 +++++++++++++++++---------
 5 files changed, 65 insertions(+), 22 deletions(-)

diff --git a/include/background.h b/include/background.h
index adba97d7..da5c6666 100755
--- a/include/background.h
+++ b/include/background.h
@@ -138,7 +138,8 @@ struct background
 
   double h; /**< reduced Hubble parameter */
   double age; /**< age in Gyears */
-  double conformal_age; /**< conformal age in Mpc */
+  double conformal_age; /**< conformal age at a_today in Mpc */
+  double conformal_age_amax; /**< conformal age at a_max in Mpc */
   double K; /**< \f$ K \f$: Curvature parameter \f$ K=-\Omega0_k*a_{today}^2*H_0^2\f$; */
   int sgnK; /**< K/|K|: -1, 0 or 1 */
   double * m_ncdm_in_eV; /**< list of ncdm masses in eV (inferred from M_ncdm and other parameters above) */
@@ -157,6 +158,7 @@ struct background
   //@{
 
   double a_today; /**< scale factor today (arbitrary and irrelevant for most purposes) */
+  double a_max; /**< upper limit of scale factor  */
 
   //@}
 
diff --git a/source/background.c b/source/background.c
index bd57e303..7ae69b49 100755
--- a/source/background.c
+++ b/source/background.c
@@ -1631,8 +1631,9 @@ int background_solve(
 
   /** - loop over integration steps: call background_functions(), find step size, save data in growTable with gt_add(), perform one step with generic_integrator(), store new value of tau */
 
-  while (pvecback_integration[pba->index_bi_a] < pba->a_today) {
-
+  /* explicit stop at a_today so results will be identical for a <= a_today */
+  double a_end = pba->a_today;
+  while (pvecback_integration[pba->index_bi_a] < pba->a_max) {
     tau_start = tau_end;
 
     /* -> find step size (trying to adjust the last step as close as possible to the one needed to reach a=a_today; need not be exact, difference corrected later) */
@@ -1640,12 +1641,12 @@ int background_solve(
                pba->error_message,
                pba->error_message);
 
-    if ((pvecback_integration[pba->index_bi_a]*(1.+ppr->back_integration_stepsize)) < pba->a_today) {
+    if ((pvecback_integration[pba->index_bi_a]*(1.+ppr->back_integration_stepsize)) < a_end) {
       tau_end = tau_start + ppr->back_integration_stepsize / (pvecback_integration[pba->index_bi_a]*pvecback[pba->index_bg_H]);
       /* no possible segmentation fault here: non-zeroness of "a" has been checked in background_functions() */
     }
     else {
-      tau_end = tau_start + (pba->a_today/pvecback_integration[pba->index_bi_a]-1.) / (pvecback_integration[pba->index_bi_a]*pvecback[pba->index_bg_H]);
+      tau_end = tau_start + (a_end/pvecback_integration[pba->index_bi_a]-1.) / (pvecback_integration[pba->index_bi_a]*pvecback[pba->index_bg_H]);
       /* no possible segmentation fault here: non-zeroness of "a" has been checked in background_functions() */
     }
 
@@ -1674,6 +1675,10 @@ int background_solve(
     /* -> store value of tau */
     pvecback_integration[pba->index_bi_tau]=tau_end;
 
+    /* step to a_max */
+    if (pvecback_integration[pba->index_bi_a] >= pba->a_today) {
+      a_end = pba->a_max;
+    }
   }
 
   /** - save last data in growTable with gt_add() */
@@ -1709,10 +1714,6 @@ int background_solve(
              pba->error_message,
              pba->error_message);
 
-  /* substitute last line with quantities today */
-  for (i=0; i<pba->bi_size; i++)
-    pData[(pba->bt_size-1)*pba->bi_size+i]=pvecback_integration[i];
-
   /** - deduce age of the Universe */
   /* -> age in Gyears */
   pba->age = pvecback_integration[pba->index_bi_time]/_Gyr_over_Mpc_;
@@ -1726,6 +1727,26 @@ int background_solve(
     pba->Omega0_dr = pvecback_integration[pba->index_bi_rho_dr]/pba->H0/pba->H0;
   }
 
+  /** - interpolate to get quantities precisely at a_max with array_interpolate() */
+  class_call(array_interpolate(
+                               pData,
+                               pba->bi_size,
+                               pba->bt_size,
+                               pba->index_bi_a,
+                               pba->a_max,
+                               &last_index,
+                               pvecback_integration,
+                               pba->bi_size,
+                               pba->error_message),
+             pba->error_message,
+             pba->error_message);
+
+  /* substitute last line with quantities a_max */
+  for (i=0; i<pba->bi_size; i++)
+    pData[(pba->bt_size-1)*pba->bi_size+i]=pvecback_integration[i];
+
+  /* -> conformal age at a_max in Mpc */
+  pba->conformal_age_amax = pvecback_integration[pba->index_bi_tau];
 
   /** - allocate background tables */
   class_alloc(pba->tau_table,pba->bt_size * sizeof(double),pba->error_message);
diff --git a/source/input.c b/source/input.c
index 2bd250a7..2c089fd2 100644
--- a/source/input.c
+++ b/source/input.c
@@ -602,6 +602,17 @@ int input_read_parameters(
   /** - scale factor today (arbitrary) */
   class_read_double("a_today",pba->a_today);
 
+  /** - scale factor max; same normalization as a_today. */
+  class_call(parser_read_double(pfc,"a_max",&param1,&flag1,errmsg),
+             errmsg,
+             errmsg);
+
+  if (flag1 == _TRUE_) {
+    pba->a_max = param1;
+  } else {
+    pba->a_max = pba->a_today;
+  }
+
   /** - h (dimensionless) and [\f$ H_0/c\f$] in \f$ Mpc^{-1} = h / 2997.9... = h * 10^5 / c \f$ */
   class_call(parser_read_double(pfc,"H0",&param1,&flag1,errmsg),
              errmsg,
diff --git a/source/perturbations.c b/source/perturbations.c
index 71738fa5..acbaf927 100755
--- a/source/perturbations.c
+++ b/source/perturbations.c
@@ -1083,7 +1083,8 @@ int perturb_timesampling_for_sources(
   last_index_thermo = first_index_thermo;
   tau = tau_ini;
 
-  while (tau < pba->conformal_age) {
+  /* do calculations up to a=a_max */
+  while (tau < pba->conformal_age_amax) {
 
     class_call(background_at_tau(pba,
                                  tau,
@@ -1166,7 +1167,7 @@ int perturb_timesampling_for_sources(
   last_index_thermo = first_index_thermo;
   tau = tau_ini;
 
-  while (tau < pba->conformal_age) {
+  while (tau < pba->conformal_age_amax) {
 
     class_call(background_at_tau(pba,
                                  tau,
@@ -1224,8 +1225,8 @@ int perturb_timesampling_for_sources(
 
   }
 
-  /** - last sampling point = exactly today */
-  ppt->tau_sampling[counter] = pba->conformal_age;
+  /** - last sampling point = exactly at a_max */
+  ppt->tau_sampling[counter] = pba->conformal_age_amax;
 
   free(pvecback);
   free(pvecthermo);
diff --git a/source/thermodynamics.c b/source/thermodynamics.c
index 426402f7..248bbe18 100755
--- a/source/thermodynamics.c
+++ b/source/thermodynamics.c
@@ -2296,6 +2296,7 @@ int thermodynamics_reionization_sample(
   double chi_heat;
   int last_index_back;
   double relative_variation;
+  double zend=1./pba->a_max - 1;
 
   Yp = pth->YHe;
 
@@ -2384,7 +2385,7 @@ int thermodynamics_reionization_sample(
   /* initial step */
   dz = dz_max;
 
-  while (z > 0.) {
+  while (z > zend) {
 
     class_test(dz < ppr->smallest_allowed_variation,
                pth->error_message,
@@ -2392,7 +2393,7 @@ int thermodynamics_reionization_sample(
 
     /* - try next step */
     z_next=z-dz;
-    if (z_next < 0.) z_next=0.;
+    if (z_next < zend) z_next=zend;
 
     class_call(thermodynamics_reionization_function(z_next,pth,preio,&xe_next),
                pth->error_message,
@@ -2677,7 +2678,7 @@ int thermodynamics_recombination_with_hyrec(
   param.nH0 = 11.223846333047*param.obh2*(1.-param.Y);  /* number density of hydrogen today in m-3 */
   param.fHe = param.Y/(1-param.Y)/3.97153;              /* abundance of helium by number */
   param.zstart = ppr->recfast_z_initial; /* Redshift range */
-  param.zend = 0.;
+  param.zend = 1./pba->a_max - 1.;
   param.dlna = 8.49e-5;
   param.nz = (long) floor(2+log((1.+param.zstart)/(1.+param.zend))/param.dlna);
   param.annihilation = pth->annihilation;
@@ -2816,7 +2817,7 @@ int thermodynamics_recombination_with_hyrec(
 
     /** - --> get redshift, corresponding results from hyrec, and background quantities */
 
-    z = param.zstart * (1. - (double)(i+1) / (double)Nz);
+    z = param.zstart  - (param.zstart - param.zend) * (double)(i+1) / (double)Nz;
 
     /* get (xe,Tm) by interpolating in pre-computed tables */
 
@@ -2962,7 +2963,7 @@ int thermodynamics_recombination_with_recfast(
   double y[3],dy[3];
 
   /* other recfast variables */
-  double OmegaB,zinitial,x_He0,x0;
+  double OmegaB,zinitial,zfinal,zend_fuzzy,x_He0,x0;
   double x_H0=0.;
   double z,mu_H,Lalpha,Lalpha_He,DeltaB,DeltaB_He;
   double zstart,zend,rhs;
@@ -3006,6 +3007,9 @@ int thermodynamics_recombination_with_recfast(
   /* z_initial */
   zinitial=ppr->recfast_z_initial;
 
+  /* z_final */
+  zfinal=1./pba->a_max - 1.;
+
   /* H_frac */
   preco->H_frac = ppr->recfast_H_frac;
 
@@ -3085,8 +3089,8 @@ int thermodynamics_recombination_with_recfast(
 
   for(i=0; i <Nz; i++) {
 
-    zstart = zinitial * (double)(Nz-i) / (double)Nz;
-    zend   = zinitial * (double)(Nz-i-1) / (double)Nz;
+    zstart = zinitial  - (zinitial-zfinal) * (double)(i) / (double)Nz;
+    zend   = zinitial  - (zinitial-zfinal) * (double)(i+1) / (double)Nz;
 
     z = zend;
 
@@ -3241,9 +3245,11 @@ int thermodynamics_recombination_with_recfast(
         x_H0 = 0.5*(sqrt(pow(rhs,2)+4.*rhs) - rhs);
       }
 
+      /* avoids spline bounds check failure due to round-off error when zend=zfinal*/
+      zend_fuzzy = i == Nz-1 ? 0.99999*zend : zend;
       class_call(generic_integrator(thermodynamics_derivs_with_recfast,
                                     zstart,
-                                    zend,
+                                    zend_fuzzy,
                                     y,
                                     &tpaw,
                                     ppr->tol_thermo_integration,
@@ -3281,7 +3287,9 @@ int thermodynamics_recombination_with_recfast(
     *(preco->recombination_table+(Nz-i-1)*preco->re_size+preco->index_re_Tb)=y[2];
 
     /* get dTb/dz=dy[2] */
-    class_call(thermodynamics_derivs_with_recfast(zend, y, dy, &tpaw,pth->error_message),
+    // 0.99999 avoids spline bounds check failure due to round-off error when zend=zfinal
+    zend_fuzzy = i == Nz-1 ? 0.99999*zend : zend;
+    class_call(thermodynamics_derivs_with_recfast(zend_fuzzy, y, dy, &tpaw,pth->error_message),
                pth->error_message,
                pth->error_message);
 
-- 
2.20.1

